name: Security Scan

on:
  schedule:
    - cron: '0 2 * * 1' # Weekly on Monday at 2 AM
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'

jobs:
  dependency-scan:
    name: Dependency Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run npm audit (frontend)
      run: |
        npm audit --audit-level=moderate --json > frontend-audit.json || true
        npm audit --audit-level=moderate
        
    - name: Run npm audit (backend)
      working-directory: ./backend
      run: |
        npm ci
        npm audit --audit-level=moderate --json > backend-audit.json || true
        npm audit --audit-level=moderate
        
    - name: Run npm audit (PWA)
      working-directory: ./pwa
      run: |
        npm install
        npm audit --audit-level=moderate --json > pwa-audit.json || true
        npm audit --audit-level=moderate || true
        
    - name: Upload audit results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-audit-results
        path: |
          frontend-audit.json
          backend/backend-audit.json
          pwa/pwa-audit.json

  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
      
    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"

  secret-scan:
    name: Secret Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Run TruffleHog OSS
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified
